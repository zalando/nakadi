server:
  port: 8080
  compression:
    enabled: true
#    mime-types: custom/mime-type,text/html,text/xml,text/plain
logging:
  level:
    ROOT: INFO
    org.springframework.web: INFO
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/local_nakadi_db
    username: nakadi_app
    password: nakadi
    driverClassName: org.postgresql.Driver
    initialSize: 2
    maxActive: 20
    testOnBorrow: true
    validationQuery: SELECT 1
nakadi:
  topic:
    default:
      partitionNum: 8
      replicaFactor: 1
      retentionMs: 172800000 # 2 days
      rotationMs: 86400000 # 1 day
  stream:
    timeoutMs: 31536000000 # 1 year :-P
  kafka:
    poll:
      timeoutMs: 100
    send:
      timeoutMs: 10000
  zookeeper:
    kafkaNamespace:
    brokers: 127.0.0.1:2181
#    exhibitor:
#      brokers: 127.0.0.1,127.0.0.2
#      port: 8181
    sessionTimeoutMs: 30000
    connectionTimeoutMs: 10000
  oauth2:
    mode: BASIC
    tokenInfoUrl: https://example.com/tokeninfo
    clientId: stups_aruha-event-store-poc
    scopes:
      uid: uid
      nakadiRead: nakadi.read
      nakadiAdmin: nakadi.admin
      eventTypeWrite: nakadi_event_type.write
      eventStreamRead: nakadi_event_stream.read
      eventStreamWrite: nakadi_event_stream.write