version: '3'
services:

  nakadi:
    build:
      context: ..
      dockerfile: ./docker-arm/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - zookeeper
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=acceptanceTest
      - NAKADI_OAUTH2_MODE=OFF
      - NAKADI_FEATURES_DEFAULT_FEATURES_CONNECTION_CLOSE_CRUTCH
      - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_EVENT_TYPE_CREATION
      - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_EVENT_TYPE_DELETION
      - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_SUBSCRIPTION_CREATION
      - NAKADI_FEATURES_DEFAULT_FEATURES_REMOTE_TOKENINFO
      - NAKADI_FEATURES_DEFAULT_FEATURES_KPI_COLLECTION
      - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_DB_WRITE_OPERATIONS
      - NAKADI_ZOOKEEPER_CONNECTIONSTRING=zookeeper://zookeeper:2181
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/local_nakadi_db?preferQueryMode=simple
      - SPRING_DATASOURCE_USERNAME=nakadi
      - SPRING_DATASOURCE_PASSWORD=nakadi

  postgres:
    image: arm64v8/postgres
    ports:
      - "5432:5432"
    volumes:
      - "./../database/nakadi:/docker-entrypoint-initdb.d"
    environment:
      POSTGRES_USER: nakadi
      POSTGRES_PASSWORD: nakadi
      POSTGRES_DB: local_nakadi_db

  zookeeper:
    image: arm64v8/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: registry.opensource.zalan.do/aruha/kafka-arm:2.7.1
    ports:
      - "29092:29092"
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_BROKER_ID: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
