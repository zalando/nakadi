version: '3'
services:

  nakadi:
    build:
      context: .
      args:
        BASE_IMAGE: "registry.opensource.zalan.do/library/openjdk-11-jre-slim:latest"
    ports:
    - "8080:8080"
    depends_on:
    - postgres
    - zookeeper
    - kafka
    environment:
    - SPRING_PROFILES_ACTIVE
    - NAKADI_OAUTH2_MODE=OFF
    - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_EVENT_TYPE_CREATION
    - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_EVENT_TYPE_DELETION
    - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_SUBSCRIPTION_CREATION
    - NAKADI_FEATURES_DEFAULT_FEATURES_REMOTE_TOKENINFO
    - NAKADI_FEATURES_DEFAULT_FEATURES_KPI_COLLECTION
    - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_DB_WRITE_OPERATIONS
    - NAKADI_ZOOKEEPER_CONNECTIONSTRING=zookeeper://zookeeper:2181
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/local_nakadi_db?preferQueryMode=simple
    - SPRING_DATASOURCE_USERNAME=nakadi
    - SPRING_DATASOURCE_PASSWORD=nakadi

  postgres:
    image: postgres:14
    ports:
    - "5432:5432"
    volumes:
    - "./database/nakadi:/docker-entrypoint-initdb.d"
    environment:
      POSTGRES_USER: nakadi
      POSTGRES_PASSWORD: nakadi
      POSTGRES_DB: local_nakadi_db

  zookeeper:
    image: zookeeper:3.6
    ports:
    - "2181:2181"

  kafka:
    image: bitnami/kafka:3.3
    ports:
    - "29092:29092"
    - "9092:9092"
    depends_on:
    - zookeeper
    environment:
      # listeners
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://0.0.0.0:29092
      # zookeeper
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      # config
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
