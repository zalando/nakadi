buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.yaml:snakeyaml:1.21'
        classpath 'org.owasp:dependency-check-gradle:5.3.2.1'
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'project-report'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

group 'org.zalando'

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    // Override spring-boot BOM versions
    ext['json.version'] = '20180130'
    ext['json-path'] = '2.4.0'
    ext['jsonassert'] = '1.5.0'

    implementation project(':core-common')
    implementation project(':core-services')
    implementation project(':core-metastore')

    // spring
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'logback-classic'
        exclude module: 'log4j-over-slf4j'
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation "org.springframework.boot:spring-boot-starter-json"
    implementation "org.springframework.boot:spring-boot-starter-jetty"
    implementation('org.springframework.boot:spring-boot-starter-security') {
        exclude module: "logback-classic"
    }
    implementation("org.springframework.boot:spring-boot-starter-jdbc") {
        exclude module: 'HikariCP'
    }

    implementation "org.apache.avro:avro:1.11.0"
    implementation 'org.zalando:problem:0.22.0'
    implementation 'org.zalando:problem-spring-web:0.23.0'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation "org.zalando:nakadi-plugin-api:$nakadiPluginApiVersion"
    implementation "org.apache.kafka:kafka-clients:$kafkaClientVersion"
    implementation "io.dropwizard.metrics:metrics-core:$dropwizardVersion"

    //Previously transitive dependencies
    implementation "com.fasterxml.jackson.core:jackson-core:$fasterXmlJacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$fasterXmlJacksonDatabindVersion"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    implementation 'jakarta.servlet:jakarta.servlet-api:4.0.4'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation "org.springframework:spring-beans:$springframeworkVersion"
    implementation "org.springframework:spring-context:$springframeworkVersion"
    implementation "org.springframework:spring-core:$springframeworkVersion"
    implementation "org.springframework:spring-web:$springframeworkVersion"
    implementation "org.springframework:spring-webmvc:$springframeworkVersion"

    // open tracing
    implementation "io.opentracing:opentracing-api:$opentracingVersion"

    runtimeOnly("com.ryantenney.metrics:metrics-spring:$dropwizardVersion") {
        exclude module: 'spring-core'
    }
    runtimeOnly 'org.zalando:jackson-datatype-problem:0.22.0'
    runtimeOnly 'org.echocat.jomon:runtime:1.6.3'
    runtimeOnly "org.postgresql:postgresql:$postgresqlVersion"

    // tests
    testImplementation 'org.json:json:20180130'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.2') {
        exclude module: "hamcrest-core"
    }
    testImplementation "org.springframework:spring-test"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.vaadin.external.google:android-json:0.0.20131108.vaadin1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'uk.co.datumedge:hamcrest-json:0.2'
    testImplementation project(path: ':core-common', configuration: 'testOutput')
}
// end::dependencies[]

bootJar {
    enabled = false
}
jar {
    enabled = true
}
