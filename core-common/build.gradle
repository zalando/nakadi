buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.yaml:snakeyaml:1.21'
        classpath 'org.owasp:dependency-check-gradle:5.3.2.1'
    }
}

plugins {
    id "com.github.davidmc24.gradle.plugin.avro" version "1.3.0"
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'project-report'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: "com.github.davidmc24.gradle.plugin.avro-base"

group 'org.zalando'

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude group: "com.vaadin.external.google", module: "android-json"
}

dependencies {
    // Override spring-boot BOM versions
    ext['json.version'] = '20180130'
    ext['json-path'] = '2.4.0'
    ext['jsonassert'] = '1.5.0'

    // spring
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'logback-classic'
        exclude module: 'log4j-over-slf4j'
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile "org.springframework.boot:spring-boot-starter-jetty"

    // oauth
    compile('org.springframework.security.oauth:spring-security-oauth2:2.5.0.RELEASE') {
        exclude module: 'spring-webmvc'
        exclude module: 'spring-security-config'
        exclude module: 'spring-beans'
        exclude module: 'spring-core'
        exclude module: 'spring-context'
    }
    compile('org.springframework.boot:spring-boot-starter-security') {
        exclude module: "logback-classic"
    }

    compile 'org.zalando:nakadi-plugin-api:3.2.1'
    compile 'com.google.guava:guava:30.1-jre'
    compile 'org.apache.commons:commons-lang3:3.8.1'

    compile "org.springframework.boot:spring-boot-starter-json"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion"
    compile 'org.zalando:jackson-datatype-problem:0.22.0'
    compile 'org.zalando:problem:0.22.0'
    compile 'org.json:json:20180130'

    compile 'org.slf4j:slf4j-log4j12'

    // open tracing
    compile "io.opentracing:opentracing-api:$opentracingVersion"
    compile "io.opentracing:opentracing-util:$opentracingVersion"

    compile "org.apache.kafka:kafka-clients:$kafkaClientVersion"

    compile("org.apache.curator:curator-recipes:$curatorVersion") {
        exclude module: "zookeeper"
    }
    compile("org.apache.zookeeper:zookeeper:$zookeeperVersion") {
        exclude module: "log4j"
    }

    compile 'org.echocat.jomon:runtime:1.6.3'
    compile 'com.googlecode.libphonenumber:libphonenumber:8.12.7'

    compile "io.dropwizard.metrics:metrics-core:$dropwizardVersion"
    compile("com.ryantenney.metrics:metrics-spring:$dropwizardVersion") {
        exclude module: 'spring-core'
    }
    compile "io.dropwizard.metrics:metrics-servlets:$dropwizardVersion"
    compile "io.dropwizard.metrics:metrics-jvm:$dropwizardVersion"

    compile("org.springframework.boot:spring-boot-starter-jdbc") {
        exclude module: 'HikariCP'
    }
    compile 'org.apache.tomcat:tomcat-jdbc'
    compile 'org.postgresql:postgresql:42.3.2'

    compile('commons-beanutils:commons-beanutils:1.9.4')
    compile('com.github.everit-org.json-schema:org.everit.json.schema:1.8.0') {
        exclude module: "json"
    }
    compile 'org.zalando:problem-spring-web:0.23.0'

    // avro
    compile "org.apache.avro:avro:1.11.0"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-avro:2.8.5"

    compile 'com.github.luben:zstd-jni:1.5.2-2'

    // tests
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile("org.springframework.boot:spring-boot-starter-validation")
    testCompile('org.junit.jupiter:junit-jupiter-api:5.5.2') {
        exclude module: "hamcrest-core"
    }
    testCompile "org.springframework:spring-test"
    testCompile 'org.springframework.boot:spring-boot-test'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.skyscreamer:jsonassert'
    testCompile 'uk.co.datumedge:hamcrest-json:0.2'
    testCompile('com.jayway.restassured:rest-assured:2.9.0') {
        exclude module: "hamcrest-core"
        exclude module: "hamcrest-library"
    }
    testCompile 'com.jayway.jsonpath:json-path'
    testCompile 'junit:junit:4.13.1'
    testRuntime 'org.pegdown:pegdown:1.6.0'
}
// end::dependencies[]

configurations {
    testOutput.extendsFrom(testCompile)
}

task jarTest(type: Jar, dependsOn: testClasses) {
    from sourceSets.test.output
    classifier = 'test'
}

artifacts {
    testOutput jarTest
}

bootJar {
    enabled = false
}
jar {
    enabled = true
}

import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    source("src/main/resources/avro-schema")
    outputDir = file("build/generated/sources")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "build/generated/sources"]
        }
    }
}
