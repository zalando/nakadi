buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.yaml:snakeyaml:1.21'
        classpath 'org.owasp:dependency-check-gradle:5.3.2.1'
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'project-report'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

group 'org.zalando'

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude group: "com.vaadin.external.google", module: "android-json"
}

dependencies {
    // Override spring-boot BOM versions
    ext['json.version'] = '20180130'
    ext['json-path'] = '2.4.0'
    ext['jsonassert'] = '1.5.0'

    implementation project(':core-common')
    implementation project(':core-metastore')
    implementation project(':core-services')

    implementation project(':api-publishing')
    implementation project(':api-consumption')
    implementation project(':api-metastore')
    implementation project(':api-cursors')
    implementation project(':api-misc')


    // spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'logback-classic'
        exclude module: 'log4j-over-slf4j'
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation "org.springframework:spring-core"
    implementation "org.springframework:spring-beans"
    implementation "org.springframework:spring-context"
    implementation "org.springframework:spring-web"
    implementation "org.springframework:spring-webmvc"
    implementation "org.springframework.boot:spring-boot-starter-jetty"

    // oauth
    implementation('org.springframework.security.oauth:spring-security-oauth2:2.5.0.RELEASE') {
        exclude module: 'spring-webmvc'
        exclude module: 'spring-security-config'
        exclude module: 'spring-beans'
        exclude module: 'spring-core'
        exclude module: 'spring-context'
    }
    implementation('org.springframework.boot:spring-boot-starter-security') {
        exclude module: "logback-classic"
    }

    // actuator
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    // storage
    implementation("org.springframework.boot:spring-boot-starter-jdbc") {
        exclude module: 'HikariCP'
    }

    // misc
    implementation 'org.apache.httpcomponents:httpclient'
    implementation('org.zalando.stups:stups-spring-oauth2-server:1.0.24') {
        exclude module: "httpclient"
    }
    implementation 'org.zalando:problem:0.22.0'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation "io.dropwizard.metrics:metrics-core:$dropwizardVersion"
    implementation("com.ryantenney.metrics:metrics-spring:$dropwizardVersion") {
        exclude module: 'spring-core'
    }
    implementation "io.dropwizard.metrics:metrics-servlets:$dropwizardVersion"
    implementation "io.dropwizard.metrics:metrics-jvm:$dropwizardVersion"
    implementation "org.zalando:nakadi-plugin-api:$nakadiPluginApiVersion"
    implementation("org.apache.zookeeper:zookeeper:$zookeeperVersion"){
        exclude module: "log4j"
    }
    implementation "org.springframework.boot:spring-boot-starter-json"
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'log4j:log4j:1.2.17'
    implementation "org.apache.avro:avro:1.11.0"
    implementation 'ch.qos.reload4j:reload4j:1.2.19'
    implementation "com.fasterxml.jackson.core:jackson-core:$fasterXmlJacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$fasterXmlJacksonDatabindVersion"
    implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    implementation 'jakarta.servlet:jakarta.servlet-api:4.0.4'
    implementation 'joda-time:joda-time:2.9.4'
    implementation 'org.apache.curator:curator-client:5.1.0'
    implementation 'org.apache.curator:curator-framework:5.1.0'
    implementation 'org.apache.httpcomponents:httpcore:4.4.15'
    implementation 'org.eclipse.jetty:jetty-http:9.4.45.v20220203'
    implementation 'org.eclipse.jetty:jetty-server:9.4.45.v20220203'
    implementation 'org.eclipse.jetty:jetty-util:9.4.45.v20220203'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.5.12'
    implementation 'org.springframework.boot:spring-boot:2.5.12'
    implementation 'org.springframework.security:spring-security-config:5.5.5'
    implementation 'org.springframework.security:spring-security-core:5.5.5'
    implementation 'org.springframework.security:spring-security-web:5.5.5'

    runtimeOnly "org.postgresql:postgresql:$postgresqlVersion"
    runtimeOnly "org.glassfish.jaxb:jaxb-runtime"
    runtimeOnly 'org.echocat.jomon:runtime:1.6.3'
    runtimeOnly "org.apache.kafka:kafka-clients:$kafkaClientVersion"
    runtimeOnly 'org.zalando:jackson-datatype-problem:0.22.0'

    // tests
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation "org.springframework:spring-test"
    testImplementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.google.code.findbugs:jsr305:3.0.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation project(path: ':core-common', configuration: 'testOutput')
    testImplementation project(path: ':core-services', configuration: 'testOutput')
}
// end::dependencies[]

bootJar {
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
    mainClassName = 'org.zalando.nakadi.Application'
}
