version: "2017-09-20"
pipeline:
  - id: test
    overlay: ci/java
    type: script
    commands:
      - desc: Checkstyle
        cmd: |
          ./gradlew checkstyle --stacktrace
      - desc: Test
        cmd: |
          ./gradlew test --stacktrace
  - id: acceptance-test
    overlay: ci/java
    type: script
    commands:
      - desc: Add PPA
        cmd: |
          apt-get update
          apt-get install -q -y --no-install-recommends software-properties-common
          add-apt-repository -y ppa:deadsnakes/ppa
          apt-get update
      - desc: Install dependencies
        cmd: |
          apt-get install -q -y --no-install-recommends python3.6 \
                                                        python3.6-dev \
                                                        python3-pip \
                                                        python3-venv \
                                                        python3.6-venv \
                                                        python3-setuptools \
                                                        python3-wheel \
                                                        gcc \
                                                        libffi-dev \
                                                        libssl-dev \
                                                        make
          update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 10
          pip3 install docker-compose==1.27.4
      - desc: Acceptance Test
        cmd: |
          ./gradlew fullAcceptanceTest --stacktrace
  - id: build-push
    overlay: ci/java
    type: script
    commands:
      - desc: Build and push to repo
        cmd: |
          ./gradlew clean app:bootJar
          IMAGE="registry-write.opensource.zalan.do/aruha/nakadi-oss:${CDP_BUILD_VERSION}"
          if [ "$CDP_PULL_REQUEST_NUMBER" ]; then
            IMAGE="registry-write.opensource.zalan.do/aruha/nakadi-oss-pr:${CDP_BUILD_VERSION}"
          fi
          docker build -t ${IMAGE} .
          docker push ${IMAGE}
