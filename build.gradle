plugins {
    id 'com.autonomousapps.dependency-analysis' version "1.17.0"
}

subprojects {
    buildscript {
        ext {
            springBootVersion = '2.5.12'
        }
        repositories {
            mavenCentral()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
    }

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(11)
        }
    }

    checkstyle {
        configFile = new File(rootDir, "checkstyle.xml")
        toolVersion = "8.34"
    }

    jacoco {
        toolVersion = "0.8.2"
    }

    jacocoTestReport {
        reports {
            xml.required = true
            html.required = true
        }
    }
    test {
        testLogging {
            events "passed", "skipped", "failed"
        }
        testLogging.exceptionFormat = 'full'
        maxParallelForks = Runtime.runtime.availableProcessors()
    }

    tasks.register("testWithReport") {
        dependsOn tasks.named("test")
        finalizedBy tasks.named("jacocoTestReport")
    }
    dependencies {
        ext {
            kafkaClientVersion = '3.3.2'
            dropwizardVersion = '3.1.3'
            curatorVersion = '5.1.0'
            zookeeperVersion = '3.6.4'
            jacksonVersion = '2.9.8'
            opentracingVersion = '0.33.0'
            springframeworkVersion = '5.3.18'
            nakadiPluginApiVersion = '3.2.1'
            fasterXmlJacksonVersion = '2.12.6'
            fasterXmlJacksonDatabindVersion = '2.12.6.1'
            postgresqlVersion = '42.3.2'
        }
    }
}

tasks.register("startNakadi", Exec.class) {
    commandLine "bash", "-c", "./nakadi.sh start-nakadi"
}

tasks.register("fullAcceptanceTest", Exec.class) {
    commandLine "bash", "-c", "./nakadi.sh acceptance-tests"
}

tasks.register("stopNakadi", Exec.class) {
    commandLine "bash", "-c", "./nakadi.sh stop-nakadi"
}

tasks.register("startStorages", Exec.class) {
    commandLine "bash", "-c", "./nakadi.sh start-storages"
}

tasks.register("checkstyle") {
    subprojects.each { dependsOn(":${it.name}:checkstyleMain") }
    subprojects.each { dependsOn(":${it.name}:checkstyleTest") }
}

tasks.register("test") {
    subprojects.each { dependsOn(":${it.name}:testWithReport") }
}
